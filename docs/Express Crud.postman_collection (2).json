{
	"info": {
		"_postman_id": "3d144b41-3ba7-41c3-ad7e-0e1a0fd78c51",
		"name": "Express Crud",
		"description": "**This is api documentation for my express crud server**\n\nStartFragment\n\n**Request Type:** GET\n\n**URL:** `localhost://3001/api/v1/post/:postId`\n\n**Description:**  \nThis API endpoint allows you to retrieve a specific post by its unique identifier (postId). The server will respond with the details of the post corresponding to the provided postId.\n\n**Parameters:**\n\n- `postId` (required): The unique identifier of the post to be retrieved. Replace `:postId` in the URL with the actual numeric ID of the post you want to fetch.\n    \n\n**Response:**  \nThe server will respond with a JSON object containing the details of the post, including attributes such as post title, content, author, creation date, and any other relevant information.\n\n**Sample Request:**\n\n- Request URL: `localhost://3000/api/v1/post/123`\n    \n\nStartFragment\n\n**GET Request Description for Retrieving Multiple Posts**\n\n**Request Type:** GET\n\n**URL:** `localhost://3001/api/v1/posts`\n\n**Description:**  \nThis API endpoint allows you to retrieve multiple posts from the server. The server will respond with an array of JSON objects, each representing a post with attributes such as post title, content, author, creation date, and any other relevant information.\n\n**Response:**  \nThe server will respond with an array of JSON objects, where each object contains the details of a post. The attributes in each object will include:\n\n- `id`: The unique identifier of the post.\n- `title`: The title of the post.\n- `text`: The content of the post.\n    \n\n**Sample Request:**\n\n- Request URL: `localhost://3001/api/v1/posts`\n    \n\nEndFragment\n\n  \n  \n\nStartFragment\n\n**POST Request Description for Creating a New Post**\n\n**Request Type:** POST\n\n**URL:** `localhost://3001/api/v1/posts`\n\n**Description:**  \nThis API endpoint allows you to create a new post by sending a POST request to the server. You need to provide the necessary information for the new post in the request body, which will be in JSON format. The server will respond with the details of the newly created post, including the unique identifier (postId) assigned by the server.\n\n**Request Body:**  \nThe request body must be a JSON object containing the attributes of the new post:\n\n- `title` (required): The title of the post.\n- `text` (required): The content of the post.\n    \n\n**Response:**  \nThe server will respond with a JSON object containing the details of the newly created post, including the assigned `id`, `title`, and `text`.\n\n**Sample Request:**\n\n- Request URL: `localhost://3001/api/v1/posts`\n- Request Method: POST\n    \n\nEndFragment\n\n  \n  \n\nStartFragment\n\n**PUT Request Description for Updating a Post**\n\n**Request Type:** PUT\n\n**URL:** `localhost://3001/api/v1/post/:postId`\n\n**Description:**  \nThis API endpoint allows you to update an existing post by sending a PUT request to the server. You need to provide the necessary information for the updated post in the request body, which will be in JSON format. The server will respond with the details of the updated post after the changes are applied.\n\n**Parameters:**\n\n- `postId` (required): The unique identifier of the post to be updated. Replace `:postId` in the URL with the actual numeric ID of the post you want to modify.\n    \n\n**Request Body:**  \nThe request body must be a JSON object containing the attributes to be updated in the post:\n\n- `title` (optional): The updated title of the post.\n- `text` (optional): The updated content of the post.\n    \n\n**Response:**  \nThe server will respond with a JSON object containing the details of the updated post, including any changes made to the `title` or `text` attributes.\n\n**Sample Request:**\n\n- Request URL: `localhost://3001/api/v1/post/1234`\n- Request Method: PUT\n    \n\nEndFragment\n\n  \n  \n\nStartFragment\n\n**  \nDELETE Request Description for Deleting a Post**\n\n**Request Type:** DELETE\n\n**URL:** `localhost://3001/api/v1/post/:postId`\n\n**Description:**  \nThis API endpoint allows you to delete an existing post by sending a DELETE request to the server. You need to provide the unique identifier (postId) of the post you want to delete in the request URL. The server will respond with a confirmation message once the post is successfully deleted.\n\n**Parameters:**\n\n- `postId` (required): The unique identifier of the post to be deleted. Replace `:postId` in the URL with the actual numeric ID of the post you want to delete.\n    \n\n**Response:**  \nThe server will respond with a confirmation message indicating that the post with the specified postId has been successfully deleted.\n\n**Sample Request:**\n\n- Request URL: `localhost://3001/api/v1/post/1234`\n- Request Method: DELETE\n    \n\nEndFragment",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28573981"
	},
	"item": []
}